<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSSclasses</title>
    <description>CSSclasses is for beginners and experts alike: Using CSS as a simple and low-barrier entry language, we empower people to understand their browser and to learn how to experiment with code. Workshop and hackathon in one event.</description>
    <link>https://cssclass.es/</link>
    <atom:link href="https://cssclass.es/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 26 Mar 2019 08:59:12 +0000</pubDate>
    <lastBuildDate>Tue, 26 Mar 2019 08:59:12 +0000</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>CSS Resources</title>
        <description>&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;p&gt;You have covered most of the really basic stuff, now it’s time to take a deep dive into some CSS topics. Here’s a list of good articles and resources.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#layout&quot;&gt;Layout&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transition&quot;&gt;Transition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transform&quot;&gt;Transform&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#animation&quot;&gt;Animation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pseudo-classes&quot;&gt;Pseudo Classes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#typography&quot;&gt;Typography&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#responsive-web-design&quot;&gt;Responsive Web Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt;Architecture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#general-resources&quot;&gt;General Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;layout&quot;&gt;Layout&lt;/h3&gt;
&lt;p&gt;At this point, you have a solid understanding of how to color, size and even transform the elements on your web page. However, you would probably like to position these elements next to each other? And get in control of where exactly they are laid out on the page? Luckily, CSS offers a variety of approaches to control the layout of elements on your page.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://learnlayout.com&quot; target=&quot;_blank&quot;&gt;learnlayout.com&lt;/a&gt; – The topic of layout is incredibly fun, but also takes more room to explain than this workshop can cover. If you are ready to dive into it and explore how to layout with CSS, we highly recommend this tutorial. It also comes in various languages!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot; target=&quot;_blank&quot;&gt;A Complete Guide to Flexbox&lt;/a&gt; from CSS-Tricks – You have already mastered the basics of CSS layout? You understand floats, position, and even looked into responsive web design? Once you are done with all that, you should check out a more recent, but already well-supported way to build complex yet flexible layouts: Flexbox.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties&quot; target=&quot;_blank&quot;&gt;A Visual Guide to CSS3 Flexbox Properties&lt;/a&gt; – Another great resource to explore and and understand how to work with Flexbox.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://flexbox.io&quot; target=&quot;_blank&quot;&gt;Flexbox.io&lt;/a&gt; by Wes Bos&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gridbyexample.com/&quot; target=&quot;blank&quot;&gt;Grid by Example&lt;/a&gt; – If you are even more adventurous and want to check out the latest and still experimental way to layout in CSS, spend some time to explore the CSS Grid Layout Module. We recommend this excellent resource by Rachel Andrew.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://learncssgrid.com/&quot; target=&quot;_blank&quot;&gt;learncssgrid.com&lt;/a&gt; - A written tutorial and overview of CSS Grid properties with visuals.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cssgrid.io/&quot; target=&quot;_blank&quot;&gt;CSSGrid.io&lt;/a&gt; - by Wes Bos - 25 short Video tutorials to learn CSS Grid&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;transition&quot;&gt;Transition&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://leaverou.github.io/animatable/&quot; target=&quot;_blank&quot;&gt;A gallery of transitions&lt;/a&gt; by Lea Verou&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions&quot; target=&quot;_blank&quot;&gt;Using CSS Transitions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;transform&quot;&gt;Transform&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.westciv.com/tools/transforms/index.html&quot; target=&quot;_blank&quot;&gt;Transform live playground&lt;/a&gt; – a nice way to try out the most common transform functions.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot; target=&quot;_blank&quot;&gt;MDN: transform&lt;/a&gt; – explains the most common transform functions and the syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;animation&quot;&gt;Animation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://alexberg.in/keyframer&quot; target=&quot;_blank&quot;&gt;Keyframer by Alex Berg&lt;/a&gt; – a tool to produce animation keyframes.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vimeo.com/125335964&quot; target=&quot;_blank&quot;&gt;Putting Your UI in Motion with CSS&lt;/a&gt; by Val Head — An Event Apart Video.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pseudo-classes&quot;&gt;Pseudo Classes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://css-tricks.com/pseudo-class-selectors/&quot; target=&quot;_blank&quot;&gt;Pseudo Class Selectors&lt;/a&gt; - Good overview of all the relevant pseudo classes that can spice up your site.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;typography&quot;&gt;Typography&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://alistapart.com/article/howtosizetextincss/&quot; target=&quot;_blank&quot;&gt;How to Size Text in CSS&lt;/a&gt; – classic article on how to set your font sizes with ems that are relative values instead of px that are fixed.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://snook.ca/archives/html_and_css/font-size-with-rem&quot; target=&quot;_blank&quot;&gt;Font Sizing With REM&lt;/a&gt; – can be considered an update on the former link that gives another modern alternative for font sizing. Makes sense to read the former article first.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2014/09/29/balancing-line-length-font-size-responsive-web-design/&quot; target=&quot;_blank&quot;&gt;Size Matters: Balancing Line Length And Font Size In Responsive Web Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;responsive-web-design&quot;&gt;Responsive Web Design&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://alistapart.com/article/responsive-web-design&quot; target=&quot;_blank&quot;&gt;Responsive Web Design&lt;/a&gt; - The classic article defining what Responsive Web Design is and how you can adapt your site to any screen size.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;architecture&quot;&gt;Architecture&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cssguidelin.es/&quot; target=&quot;_blank&quot;&gt;cssguidelin.es&lt;/a&gt; – High-level advice and guidelines for writing sane, manageable, scalable CSS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048&quot; target=&quot;_blank&quot;&gt;The 30 CSS Selectors you Must Memorize&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5797014/why-do-browsers-match-css-selectors-from-right-to-left&quot; target=&quot;_blank&quot;&gt;Why do browsers match CSS selectors from right to left&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;general-resources&quot;&gt;General Resources&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cssreference.io&quot; target=&quot;_blank&quot;&gt;CSS Reference&lt;/a&gt; - Learn by example: cssreference.io is a free visual guide to CSS. It features the most popular properties, and explains them with illustrated and animated examples.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://marksheet.io&quot; target=&quot;_blank&quot;&gt;MarkSheet&lt;/a&gt; - MarkSheet is a free HTML &amp;amp; CSS tutorial covering
everything from explaining what a web browser is to how to make your website responsive. It is split up in
different sections and chapters so you can easily skip on topics you are already familiar with.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/html5/&quot; target=&quot;_blank&quot;&gt;The official HTML5 Specification&lt;/a&gt; - Well, almost. But if they ever make an official specification of what HTML5 is, this is the W3C Candidate Recommendation. If you really want to know how something is defined, go here and read up.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/standards/techs/css#w3c_all&quot; target=&quot;_blank&quot;&gt;The official CSS3 &lt;em&gt;stuff&lt;/em&gt;&lt;/a&gt; - Unlike HTML5, CSS3 is not defined in one big specification. It consists of a lot of puzzle pieces called modules that each define a specific subset of CSS properties. Again, don’t be afraid to have a look at this at some point (it’s ok if that point is somewhere in the future), even if it seems overly technical at first.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot; target=&quot;_blank&quot;&gt;Mozilla Developer Network CSS Portal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://caniuse.com/&quot; target=&quot;_blank&quot;&gt;caniuse&lt;/a&gt; – Can I use provides up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot; target=&quot;_blank&quot;&gt;Search the CSS reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot; target=&quot;_blank&quot;&gt;Search the HTML reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/15/css-resources/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/15/css-resources/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Challenges</title>
        <description>&lt;h3 id=&quot;challenges-start-experimenting&quot;&gt;Challenges: Start experimenting!&lt;/h3&gt;

&lt;p&gt;Now you know the basics of getting content and styles on your website! From here on, you have all the tools you need to explore the many more properties and possibilities of CSS. Start experimenting – we would love to see what you discovered in the demos!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The dotted circle:&lt;/strong&gt; You already know how to apply these borders to a box, right? Now make it a circle! Hint: Look up the &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt; property!&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/NGxOrL/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The fancy link:&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;background-color&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:hover&lt;/code&gt; … you know most of the things to create a nice looking link like this!&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/zvrmdv/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Polaroid:&lt;/strong&gt; You know how to add an &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, you know how to apply &lt;code class=&quot;highlighter-rouge&quot;&gt;padding. If now you can figure out how &lt;/code&gt;box-shadow` works, creating a Polaroid effect like this will be a piece of cake for you!&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/PPZyBd/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Little Galaxy:&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;animation&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;@keyframes&lt;/code&gt; — All the new things!&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/VveEqy/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Smiley:&lt;/strong&gt; You will need to read up a little bit on &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt; to make the meh face smile on &lt;code class=&quot;highlighter-rouge&quot;&gt;:hover&lt;/code&gt;. Also you will need to understand how to use selectors for elements inside of other elements. To make it go a little smooth, you need to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt;.&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/ojbaVo/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chasing The Laser Pointer:&lt;/strong&gt; You are the cat, chasing the laser pointer with your cursor. You will need to know about &lt;code class=&quot;highlighter-rouge&quot;&gt;:hover&lt;/code&gt;, the &lt;code class=&quot;highlighter-rouge&quot;&gt;~ sibling&lt;/code&gt; selector and &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt;. Also, some &lt;code class=&quot;highlighter-rouge&quot;&gt;position&lt;/code&gt; knowledge. Moving things can be done in several ways, you should check out &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: translate&lt;/code&gt;.&lt;br /&gt;
(&lt;a href=&quot;http://codepen.io/verpixelt/full/YywRyj/&quot; target=&quot;_blank&quot;&gt;Visual example&lt;/a&gt; — Try not to look at the code)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/14/css-challenges/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/14/css-challenges/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Transforms</title>
        <description>&lt;h3 id=&quot;transform&quot;&gt;Transform&lt;/h3&gt;

&lt;p&gt;Transforms can be used to manipulate elements. You can take any element and add one or many transforms to it, including &lt;code class=&quot;highlighter-rouge&quot;&gt;translate&lt;/code&gt; (moving the element), &lt;code class=&quot;highlighter-rouge&quot;&gt;scale&lt;/code&gt; (make it bigger/smaller), &lt;code class=&quot;highlighter-rouge&quot;&gt;skew&lt;/code&gt; (distort the element) and many more. All these transforms happen without disturbing the rendering flow. What does that mean? If you have an element that is a 100px square and you add &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(2);&lt;/code&gt; to it, it is now scaled up to be a 200px square element, but all other elements around it stay in their positions. If instead you double width and height of your element, that will push other elements away.&lt;/p&gt;

&lt;p&gt;Let’s go through these one by one. &lt;code class=&quot;highlighter-rouge&quot;&gt;translate&lt;/code&gt; can be used in two different ways:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_36_72&quot; type=&quot;radio&quot; name=&quot;switch_36&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_36_72&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_36_73&quot; type=&quot;radio&quot; name=&quot;switch_36&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_36_73&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.movedownright&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.movedownright2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Both classes &lt;code class=&quot;highlighter-rouge&quot;&gt;.movedownright&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.movedownright2&lt;/code&gt; manipulate any element in the same way: move it 10px right and 20px down. Negative values (e.g. -10px) would move it left or up. &lt;code class=&quot;highlighter-rouge&quot;&gt;.movedownright&lt;/code&gt; uses a shorthand syntax for translateX and translateY, &lt;code class=&quot;highlighter-rouge&quot;&gt;.movedownright2&lt;/code&gt; uses the individual &lt;code class=&quot;highlighter-rouge&quot;&gt;translateX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;translateY&lt;/code&gt; transforms. Notice how you can add several transforms by just leaving a space between them.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scale&lt;/code&gt; can be used to scale elements up or down, where &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(0);&lt;/code&gt; means the element is gone, &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(0.5);&lt;/code&gt; scales it down to 50% of the original size and &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale(2);&lt;/code&gt; doubles the size to 200%.&lt;/p&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;skew&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;skewX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;skewY&lt;/code&gt; you can skew your elements by given angles on the x- or y-axis. With rotate you can &lt;code class=&quot;highlighter-rouge&quot;&gt;rotate&lt;/code&gt; your elements by a given angle.&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_37_74&quot; type=&quot;radio&quot; name=&quot;switch_37&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_37_74&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_37_75&quot; type=&quot;radio&quot; name=&quot;switch_37&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_37_75&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.skewme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* .skewme2 does the same as .skewme */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.skewme2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skewX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skewY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.rotateme&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now here is an example of using several transforms at once, but only on &lt;code class=&quot;highlighter-rouge&quot;&gt;:hover&lt;/code&gt; when you move the cursor over an element (notice how we are very happy to use transitions again as well):&lt;/p&gt;

&lt;p data-height=&quot;481&quot; data-theme-id=&quot;17669&quot; data-slug-hash=&quot;jPJNNo&quot; data-default-tab=&quot;result&quot; data-user=&quot;verpixelt&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/verpixelt/pen/jPJNNo/&quot;&gt;jPJNNo&lt;/a&gt; by Kevin Lorenz (&lt;a href=&quot;http://codepen.io/verpixelt&quot;&gt;@verpixelt&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/13/css-transform/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/13/css-transform/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Transitions</title>
        <description>&lt;h3 id=&quot;transition&quot;&gt;Transition&lt;/h3&gt;
&lt;p&gt;Transitions are a nice way to add some interactive animations to your site. If you add a transition to an element, the browser will automatically animate between two states when they change. To try that you can combine what you just learned about classes and &lt;code class=&quot;highlighter-rouge&quot;&gt;:hover&lt;/code&gt; and add the &lt;code class=&quot;highlighter-rouge&quot;&gt;transition&lt;/code&gt; property to the mix:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_33_66&quot; type=&quot;radio&quot; name=&quot;switch_33&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_33_66&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_33_67&quot; type=&quot;radio&quot; name=&quot;switch_33&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_33_67&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.changeonhover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.changeonhover&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;changeonhover&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hover me! Hover Me!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice how you did not need to define an animation but still the browser animates between the two states? All we did is insert &lt;code class=&quot;highlighter-rouge&quot;&gt;transition: 1s all;&lt;/code&gt; which is the transition shorthand with only the first two values that are a &lt;code class=&quot;highlighter-rouge&quot;&gt;transition-duration&lt;/code&gt; of 1 second and the &lt;code class=&quot;highlighter-rouge&quot;&gt;transition-property&lt;/code&gt; of &lt;code class=&quot;highlighter-rouge&quot;&gt;all&lt;/code&gt; which means the browser will animate between all properties that have changed. You could also define different transitions for different properties, separated by a comma. Let’s go a little overboard with that and also use the other transition values:&lt;/p&gt;

&lt;p data-height=&quot;458&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;MowpMv&quot; data-default-tab=&quot;result&quot; data-user=&quot;CSSclasses&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSSclasses :hover&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/team/CSSclasses/pen/MowpMv/&quot;&gt;CSSclasses :hover&lt;/a&gt; by CSSclasses (&lt;a href=&quot;https://codepen.io/CSSclasses&quot;&gt;@CSSclasses&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Notice how we used a very complicated transition shorthand here:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_34_68&quot; type=&quot;radio&quot; name=&quot;switch_34&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_34_68&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_34_69&quot; type=&quot;radio&quot; name=&quot;switch_34&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_34_69&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.2s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ease-out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;2s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s break it down: &lt;code class=&quot;highlighter-rouge&quot;&gt;1s width 0.2s ease-out&lt;/code&gt; are the values that define the transition just for the width. The shorthand syntax is:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_35_70&quot; type=&quot;radio&quot; name=&quot;switch_35&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_35_70&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_35_71&quot; type=&quot;radio&quot; name=&quot;switch_35&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_35_71&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transition-duration&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transition-property&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transition-delay&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transition-timing-function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So in our example the width gets transitioned for one second, but only after a 0.2 second delay, with a timing function of ease-out. And then you use a comma and define the transition for the next property if you want to. Phew, sounds complicated, right? But as you can see in the example, you don’t always need to define all values, as they will have default values, as the 2s background-color transition shows. Don’t worry. It’s ok to look this up every time until you remember it.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/12/css-transitions/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/12/css-transitions/</guid>
        
        
      </item>
    
      <item>
        <title>CSS More Selectors</title>
        <description>&lt;h3 id=&quot;more-selectors-nth-child-nth-of-type-sibling&quot;&gt;More selectors: nth-child, nth-of-type, sibling&lt;/h3&gt;
&lt;p&gt;There are a few more selectors to select subsets out of many elements. &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; sibling selector are a few common examples of css selectors that are often very useful.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child&lt;/code&gt; is very useful if you have recurring elements with alternating styling. Take an unordered list for example: You want odd rows to be white, even rows to be a bit darker. You can assign different style rules to even list elements without messing with the HTML markup – which is handy when you have to change the styles again later. This can be achieved by assigning &lt;code class=&quot;highlighter-rouge&quot;&gt;li:nth-child(even) { background-color: #f3f3f3; }&lt;/code&gt; to those list elements. Instead of even you could also use 2n to select any &lt;code class=&quot;highlighter-rouge&quot;&gt;2nd&lt;/code&gt; element, &lt;code class=&quot;highlighter-rouge&quot;&gt;3n&lt;/code&gt; for every third, &lt;code class=&quot;highlighter-rouge&quot;&gt;3n-1&lt;/code&gt; for every third but starting with the second and so on.&lt;/p&gt;

&lt;p data-height=&quot;381&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;rwVygY&quot; data-default-tab=&quot;result&quot; data-user=&quot;CSSclasses&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSSclasses nth-child&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/team/CSSclasses/pen/rwVygY/&quot;&gt;CSSclasses nth-child&lt;/a&gt; by CSSclasses (&lt;a href=&quot;https://codepen.io/CSSclasses&quot;&gt;@CSSclasses&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type&lt;/code&gt; works almost like the &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child&lt;/code&gt;. But &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child&lt;/code&gt; doesn’t care about what type the elements are. If you put a &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; in the middle of the list, &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-child&lt;/code&gt; will treat that just like one of the list elements. That is where &lt;code class=&quot;highlighter-rouge&quot;&gt;:nth-of-type&lt;/code&gt; is stricter: It only executes the rule on elements of the given selector.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; sibling selector selects all elements that are &lt;em&gt;neighbors&lt;/em&gt; of a selected element. So if you take the following example, sibling selectors can add dynamic behavior to your collection of fruits and vegetables:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_32_64&quot; type=&quot;radio&quot; name=&quot;switch_32&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_32_64&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_32_65&quot; type=&quot;radio&quot; name=&quot;switch_32&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_32_65&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.vegetable-checkbox&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:checked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.vegetable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#aaf0bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.fruit-checkbox&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:checked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ffaabb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While these rules look very complex, they are not so bad when you take them apart. The first selector &lt;code class=&quot;highlighter-rouge&quot;&gt;.vegetable-checkbox&lt;/code&gt; looks for anything that has the class “vegetable-checkbox” in the HTML. By adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;:checked&lt;/code&gt; that rule only applies if it is a checkbox that is checked. Then the &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; indicates that another selector follows. This following selector in the end is our target that gets the styles in the rule, if there is any element in the neighborhood that is found by the first selector.&lt;/p&gt;

&lt;p data-height=&quot;476&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;dRoWEY&quot; data-default-tab=&quot;result&quot; data-user=&quot;CSSclasses&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSSclasses :checked&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/team/CSSclasses/pen/dRoWEY/&quot;&gt;CSSclasses :checked&lt;/a&gt; by CSSclasses (&lt;a href=&quot;https://codepen.io/CSSclasses&quot;&gt;@CSSclasses&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/11/css-more-selectors/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/11/css-more-selectors/</guid>
        
        
      </item>
    
      <item>
        <title>Cascade and Inheritance</title>
        <description>&lt;h2 id=&quot;topics-covered&quot;&gt;Topics covered&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#cascade-and-inheritance&quot;&gt;Cascade and Inheritance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#developer-tools-to-the-rescue&quot;&gt;Developer Tools to the rescue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#parents-children-siblings-inheritance&quot;&gt;Parents, Children, Siblings, Inheritance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#specificity&quot;&gt;Specificity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cascade-and-inheritance&quot;&gt;Cascade and Inheritance&lt;/h3&gt;

&lt;p&gt;As the name Cascading Style Sheets suggests, CSS specifies the &lt;em&gt;styles&lt;/em&gt; for a document in a &lt;em&gt;cascading&lt;/em&gt; manner. But what exactly does &lt;em&gt;cascading&lt;/em&gt; mean?&lt;/p&gt;

&lt;p&gt;First it is important to understand that most elements in a document are subject to more than one style declaration. Sometimes these declarations are conflicting. If one declaration says an element should be red and another one says it should be green, the browser can only apply one of them.&lt;/p&gt;

&lt;p&gt;The set of rules that determines which of these conflicting declarations to apply is called the &lt;em&gt;cascade&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;the-user-agent-stylesheet&quot;&gt;The User Agent Stylesheet&lt;/h4&gt;

&lt;p&gt;Every stylesheet that you, the &lt;em&gt;author&lt;/em&gt;, add to a website, is called an &lt;em&gt;author stylesheet&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Every browser, or &lt;em&gt;user agent&lt;/em&gt;, also has its own &lt;em&gt;user agent stylesheet&lt;/em&gt;. It makes sure that every document always has some sensible default styling, even without you writing a single line of CSS.&lt;/p&gt;

&lt;p&gt;Thanks to the user agent stylesheet, all headlines have a bigger font size, and every link is blue and underlined. While these defaults are very useful, the rules of the cascade make sure that you can always overwrite them in your own author stylesheets.&lt;/p&gt;

&lt;p&gt;If the user agent stylesheet says all links should be blue, but your author stylesheet says all links should be red, all links will be red.&lt;/p&gt;

&lt;h4 id=&quot;overwriting-your-own-styles&quot;&gt;Overwriting your own styles&lt;/h4&gt;

&lt;p&gt;The cascade is also important for when you want to overwrite your own styles. But why would you want to overwrite your own styles?&lt;/p&gt;

&lt;p&gt;Imagine you are styling a document with some paragraphs. All these paragraphs should have green text, but one of them contains a warning, and should therefore be red.&lt;/p&gt;

&lt;p&gt;Here is one way to do this:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_25_50&quot; type=&quot;radio&quot; name=&quot;switch_25&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_25_50&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_25_51&quot; type=&quot;radio&quot; name=&quot;switch_25&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_25_51&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.warning&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I am a standard green paragraph of text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I am another standard green paragraph of text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;warning&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Warning! I am a red paragraph of text!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example, the first rule specifies that all paragraphs have green text. The second rule overwrites the first rule wherever &lt;code class=&quot;highlighter-rouge&quot;&gt;class=&quot;warning&quot;&lt;/code&gt; is applied.&lt;/p&gt;

&lt;p&gt;This is a good example why you would want to overwrite your own styles: Apply generic default styles for all elements first, then overwrite some of them to create exceptions.&lt;/p&gt;

&lt;p&gt;If you think that is all very complicated, you are not wrong. Thankfully, computers are much better at figuring these things out than humans.&lt;/p&gt;

&lt;h3 id=&quot;developer-tools-to-the-rescue&quot;&gt;Developer Tools to the rescue&lt;/h3&gt;

&lt;p&gt;Developer tools are our best friends when building websites. They can give us a lot of feedback about the elements on a web page.&lt;/p&gt;

&lt;p&gt;One great developer tool is &lt;em&gt;inspect element&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The basic idea behind inspect element is that you can click any element on a page and your browser will tell you a lot of useful things about it. For example which styles are assigned to the element.&lt;/p&gt;

&lt;p&gt;Inspect element or something similar is available in all modern browsers. In Chrome and Firefox you need to right click on the page and select &lt;em&gt;Inspect Element&lt;/em&gt; from the context menu. If you are using Safari you first need to &lt;a href=&quot;https://support.apple.com/kb/PH21414&quot;&gt;enable developer tools in the browser&lt;/a&gt;. If you are using Edge, inspect element is called &lt;em&gt;DOM Inspector&lt;/em&gt;. You also need to &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/documentation/f12-devtools-guide/settings/&quot;&gt;enable it first in the f12 Developer Tools menu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read more about how to use developer tools in your browser using the following links:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/kb/PH21414&quot;&gt;Safari&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/inspect-styles/&quot;&gt;Chrome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/documentation/f12-devtools-guide/dom-explorer/&quot;&gt;Edge&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/UI_Tour&quot;&gt;Firefox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an animated gif of what inspect element looks like in Google Chrome:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/inspect-element.gif&quot; alt=&quot;Animated gif of inspecting an element in Google Chrome&quot; /&gt;
  &lt;figcaption&gt;
    &lt;p&gt;The element inspector in Google Chrome Developer Tools&lt;/p&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/inspect-element.png&quot; alt=&quot;Image of the styles panel in Google Chrome Developer Tools&quot; /&gt;
  &lt;figcaption&gt;
    &lt;p&gt;The styles panel shows you which styles are applied to an element and where to find them.&lt;/p&gt;
    &lt;p&gt;It also indicates overwritten styles as &lt;strike&gt;striked out&lt;/strike&gt;&lt;/p&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;parents-children-siblings-inheritance&quot;&gt;Parents, Children, Siblings, Inheritance&lt;/h3&gt;

&lt;p&gt;When we talk about an HTML document, we often describe it as a family tree. When an element stands between the opening tag and the closing tag of another element, it is &lt;em&gt;wrapped&lt;/em&gt; inside another element. Elements that are wrapped inside another element are also called &lt;em&gt;children&lt;/em&gt;. The tree of elements in a document is also called the &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM&lt;/a&gt;&lt;/em&gt;, and the elements in the tree are called &lt;em&gt;DOM nodes&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Consider the following document:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_26_52&quot; type=&quot;radio&quot; name=&quot;switch_26&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_26_52&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_26_53&quot; type=&quot;radio&quot; name=&quot;switch_26&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_26_53&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Web Browsers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Firefox is Mozilla's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Chrome is Google's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Safari is Apple's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Edge is Microsoft's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Learn more&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Read the Wikipedia article about web browsers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For this document, the following statements apply:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;h2&lt;/code&gt; is a child of &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; is a child of &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;h2&lt;/code&gt; is a sibling of &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;h2&lt;/code&gt; has four siblings&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; is a parent of &lt;code class=&quot;highlighter-rouge&quot;&gt;h2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; has five children&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;h2&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; are descendants of &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; are ancestors of &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; are wrapped inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;-element&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;-element is wrapped around the &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;-element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One way we can make use of these relationships in our CSS is through &lt;em&gt;inheritance&lt;/em&gt;. Inheritance means that some CSS properties, like text color or font size, get passed down, or &lt;em&gt;inherited&lt;/em&gt; from parent to children and further descendants. So if we want all the text in our document to be green, instead of styling every single element we can add the following CSS:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_27_54&quot; type=&quot;radio&quot; name=&quot;switch_27&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_27_54&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_27_55&quot; type=&quot;radio&quot; name=&quot;switch_27&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_27_55&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All visible elements in an HTML document are descendants of the body element. Therefore the color green now applies to every element on the page, as long as the element doesn’t have its own color property value.&lt;/p&gt;

&lt;p&gt;Now let’s give this document a bit more variety:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_28_56&quot; type=&quot;radio&quot; name=&quot;switch_28&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_28_56&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_28_57&quot; type=&quot;radio&quot; name=&quot;switch_28&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_28_57&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Web Browsers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.mozilla.org/en-US/firefox/new/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Firefox&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; is Mozilla's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.com/chrome/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Chrome&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; is Google's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.apple.com/lae/safari/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Safari&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; is Apple's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.microsoft.com/en-us/windows/microsoft-edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Edge&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; is Microsoft's web browser.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Learn more&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Read the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://en.wikipedia.org/wiki/Web_browser&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Wikipedia article about web browsers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this document, all elements without a specified text color will inherit the green text color from the &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;-element. The &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; has its own white text color that overwrites the green text color from the &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;-element. It also has a green background color.&lt;/p&gt;

&lt;p&gt;You will notice that the &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;-elements don’t inherit the text color of their ancestors. That is because the &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;-element has its own blue text color specified in the user agent style sheet.&lt;/p&gt;

&lt;p&gt;Unfortunately, blue on green is not very readable. It might be a good idea to change the link color for the &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; by adding the following CSS:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_29_58&quot; type=&quot;radio&quot; name=&quot;switch_29&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_29_58&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_29_59&quot; type=&quot;radio&quot; name=&quot;switch_29&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_29_59&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You might wonder why there is an empty space between &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;footer a&lt;/code&gt; selector. This empty space is called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_selectors&quot;&gt;descendant combinator&lt;/a&gt;. The descendant combinator lets you select elements that are descendants of another element.&lt;/p&gt;

&lt;p&gt;This becomes a bit clearer when you read the selectors from right to left. &lt;code class=&quot;highlighter-rouge&quot;&gt;footer a&lt;/code&gt; will select every &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; element, that is a &lt;em&gt;descendant&lt;/em&gt; of a &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt;-element. You can also combine more selectors. For example &lt;code class=&quot;highlighter-rouge&quot;&gt;footer h2 a&lt;/code&gt; would select every link inside of a level two heading that is inside of a footer.&lt;/p&gt;

&lt;p&gt;Knowing this we can make sure that all our links inside the footer have a white text color. We also want to make sure that they are underlined with &lt;code class=&quot;highlighter-rouge&quot;&gt;text-decoration: underline;&lt;/code&gt;. This way people can still recognize that they are links, not just regular text.&lt;/p&gt;

&lt;h4 id=&quot;the-inherit-keyword&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;inherit&lt;/code&gt; keyword&lt;/h4&gt;

&lt;p&gt;This is all well and good, but what if we decide to change the text color in our footer from white to yellow? In our example we would have to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt; values for &lt;code class=&quot;highlighter-rouge&quot;&gt;footer&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;footer a&lt;/code&gt; to yellow to achieve this. Ugh, so much work!&lt;/p&gt;

&lt;p&gt;Thankfully, there is the &lt;code class=&quot;highlighter-rouge&quot;&gt;inherit&lt;/code&gt; keyword.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;inherit&lt;/code&gt; keyword forces some attributes, like color, to be &lt;em&gt;inherited&lt;/em&gt; from the parent element. So in our example we could give our &lt;code class=&quot;highlighter-rouge&quot;&gt;footer a&lt;/code&gt; the property value &lt;code class=&quot;highlighter-rouge&quot;&gt;color: inherit;&lt;/code&gt;. This way the links inside our footer are always the same color as the text in our footer.&lt;/p&gt;

&lt;p&gt;There is also the newer &lt;code class=&quot;highlighter-rouge&quot;&gt;currentcolor&lt;/code&gt; keyword. &lt;code class=&quot;highlighter-rouge&quot;&gt;currentcolor&lt;/code&gt; always represents the text color of a certain element. If you want to change another attribute than &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt; to that same element’s text color, you could do that with a declaration like &lt;code class=&quot;highlighter-rouge&quot;&gt;border-color: currentcolor&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;specificity&quot;&gt;Specificity&lt;/h3&gt;

&lt;p&gt;Specificity means that a rule that is &lt;em&gt;more specific&lt;/em&gt; overpowers a rule that is &lt;em&gt;less specific&lt;/em&gt;. For example selecting every link inside a footer element with &lt;code class=&quot;highlighter-rouge&quot;&gt;footer a&lt;/code&gt; is &lt;em&gt;more specific&lt;/em&gt; than selecting every link element everywhere with &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some selectors are more specific by default. For example a &lt;em&gt;class selector&lt;/em&gt; will always have a higher specificity than an &lt;em&gt;element selector&lt;/em&gt;. This makes sense, because selecting only elements with a certain class attribute is &lt;em&gt;more specific&lt;/em&gt; than selecting &lt;em&gt;every&lt;/em&gt; element of a type.&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_30_60&quot; type=&quot;radio&quot; name=&quot;switch_30&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_30_60&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_30_61&quot; type=&quot;radio&quot; name=&quot;switch_30&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_30_61&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;.danger-link&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;danger-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;danger.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am a very dangerous link, do not click me!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example the link will end up red. The first rule for &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; will be overwritten by the &lt;em&gt;more specific&lt;/em&gt; rule &lt;code class=&quot;highlighter-rouge&quot;&gt;body a&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The class selector &lt;code class=&quot;highlighter-rouge&quot;&gt;.danger-link&lt;/code&gt; is even more specific, therefore it overwrites them both.&lt;/p&gt;

&lt;p&gt;It is important to keep in mind that in the cascade &lt;em&gt;specificity beats the order&lt;/em&gt; of rules in your stylesheet. If a rule is followed by another rule with the &lt;em&gt;same specificity&lt;/em&gt;, the second rule overwrites the first. If the first rule has a &lt;em&gt;higher specificity&lt;/em&gt;, the first rule still overwrites any less specific rules that come after it.&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_31_62&quot; type=&quot;radio&quot; name=&quot;switch_31&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_31_62&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_31_63&quot; type=&quot;radio&quot; name=&quot;switch_31&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_31_63&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I am a green paragraph of text because &quot;body p&quot; is more specific than &quot;p&quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Most of the time you don’t need to think about specificity too much, but sometimes high specificity can cause bugs or unexpected behavior. You can prevent this by avoiding overly specific selectors, like &lt;code class=&quot;highlighter-rouge&quot;&gt;.site-header nav ul li a&lt;/code&gt;. If you want to read more about this, the Mozilla Developer Network has a &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/CSS/Specificity&quot;&gt;more detailed article on specificity&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/10/css-cascade-inheritance/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/10/css-cascade-inheritance/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Class Selector</title>
        <description>&lt;h3 id=&quot;class-selector&quot;&gt;Class Selector&lt;/h3&gt;
&lt;p&gt;Until now we selected HTML elements to apply styles to an element. What’s wrong with that? Nothing, until you want to have two or more differently styled &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;s on your page.&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_23_46&quot; type=&quot;radio&quot; name=&quot;switch_23&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_23_46&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_23_47&quot; type=&quot;radio&quot; name=&quot;switch_23&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_23_47&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;I am a div with a border&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;I am a different div but i look like the other one! 😞&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy this code example into your html file, and check out what it looks like in the browser. Now let’s say the second &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; should be blue. We can achieve that by assigning classes to the &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;s in our HTML. We can then apply styles to each class in our CSS:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_24_48&quot; type=&quot;radio&quot; name=&quot;switch_24&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_24_48&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_24_49&quot; type=&quot;radio&quot; name=&quot;switch_24&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_24_49&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.greenthing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.bluething&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;.border-dotted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dotted&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;greenthing&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am a div with a border&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bluething border-dotted&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;I am a different div and I don’t look like the other one any more! 😀&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now here you should note several things. Both &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;s get the styles of the &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; rule, as this applies to all &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;s. Then the first &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; also gets the styles of the class &lt;code class=&quot;highlighter-rouge&quot;&gt;.greenthing&lt;/code&gt;. In HTML the classes get assigned by writing a class attribute inside of the opening tag of the element. The second &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; has two classes – you can assign as many of them as you want. You separate class names by a space. In the CSS code, class selectors are marked by a dot like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;.border-dotted&lt;/code&gt;. This class is remarkable as it &lt;code class=&quot;highlighter-rouge&quot;&gt;overrides&lt;/code&gt; the border style that was defined in the &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; selector.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/09/css-class-selector/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/09/css-class-selector/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Hover</title>
        <description>&lt;h3 id=&quot;hover&quot;&gt;Hover&lt;/h3&gt;
&lt;p&gt;Hover is a small example of how you can add some fun little interactivity to your site. Let’s take our &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; example from above and add a little bit to our CSS:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_22_44&quot; type=&quot;radio&quot; name=&quot;switch_22&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_22_44&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_22_45&quot; type=&quot;radio&quot; name=&quot;switch_22&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_22_45&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dotted&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you apply this CSS to our &lt;a href=&quot;/2015/01/06/css-border/&quot;&gt;border example&lt;/a&gt;, you will see no change at first. But if you move your mouse cursor over the &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; (you “hover” it), you will see the style changes applied, that we defined with the &lt;code class=&quot;highlighter-rouge&quot;&gt;div:hover&lt;/code&gt; pseudo-class. There are some more pseudo-classes like that that you can learn about later.&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/08/css-hover/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/08/css-hover/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Box Model</title>
        <description>&lt;h3 id=&quot;the-box-model&quot;&gt;The Box Model&lt;/h3&gt;
&lt;p&gt;The Box Model is something that describes how all of these boxes behave, and how the browser knows about the space they occupy on a page.&lt;/p&gt;

&lt;p&gt;You’ve learned that you can specify width, height and borders, but there’s more than that. You can also specify a &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, which is some space between your content and the edge of the box. And you can specify a &lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;, which is the size between the box and it’s neighboring boxes.&lt;/p&gt;

&lt;p&gt;Here’s an example with all of these properties so you can see how they behave. Note that the content is 5px away from the border, and that the boxes are 10px away from each other.&lt;/p&gt;

&lt;p data-height=&quot;345&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;mwJmYO&quot; data-default-tab=&quot;result&quot; data-user=&quot;CSSclasses&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSSclasses Box Model&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/team/CSSclasses/pen/mwJmYO/&quot;&gt;CSSclasses Box Model&lt;/a&gt; by CSSclasses (&lt;a href=&quot;https://codepen.io/CSSclasses&quot;&gt;@CSSclasses&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;And here you can see how these different properties compose a box:&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/assets/images/box-model.png&quot; alt=&quot;A visualization of the box model.&quot; /&gt;
  &lt;figcaption&gt;
    &lt;p&gt;A visualization of the box model.&lt;/p&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Now, how much space does this box occupy on a page? We need to take into account not just the width and the height that was specified, but also the paddings and the borders (we can forget about the margins for now). Our box actually occupies a width of 80px plus 5px on each side for the paddings, plus 1px for each border (note we’re using the border shorthand). So that means that the real width is 92px.&lt;/p&gt;

&lt;p&gt;There is a way to make the box model work differently, so that you don’t need to do these kinds of calculations, using the box-sizing property: &lt;code class=&quot;highlighter-rouge&quot;&gt;box-sizing: border-box;&lt;/code&gt;.&lt;/p&gt;

&lt;p data-height=&quot;437&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;RgPpOm&quot; data-default-tab=&quot;result&quot; data-user=&quot;CSSclasses&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSSclasses Box Sizing&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/team/CSSclasses/pen/RgPpOm/&quot;&gt;CSSclasses Box Sizing&lt;/a&gt; by CSSclasses (&lt;a href=&quot;https://codepen.io/CSSclasses&quot;&gt;@CSSclasses&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;If you specify that, now your box will indeed occupy 80px, as the borders and paddings become part of the box. This usually makes it easier to understand, so we suggest you use it.&lt;/p&gt;
</description>
        <pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/07/css-box-model/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/07/css-box-model/</guid>
        
        
      </item>
    
      <item>
        <title>CSS Border Properties</title>
        <description>&lt;h3 id=&quot;border&quot;&gt;Border&lt;/h3&gt;
&lt;p&gt;You can also put a nice &lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt; around your elements. Try this:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_20_40&quot; type=&quot;radio&quot; name=&quot;switch_20&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_20_40&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_20_41&quot; type=&quot;radio&quot; name=&quot;switch_20&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_20_41&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;I am a div with a border&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you assigned your &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; to have a &lt;code class=&quot;highlighter-rouge&quot;&gt;black&lt;/code&gt; border that is &lt;code class=&quot;highlighter-rouge&quot;&gt;5px&lt;/code&gt; thick and &lt;code class=&quot;highlighter-rouge&quot;&gt;solid&lt;/code&gt;. Let’s dissect the border property a little bit with a different border and a generic description:&lt;/p&gt;

&lt;div class=&quot;m-switch&quot;&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_21_42&quot; type=&quot;radio&quot; name=&quot;switch_21&quot; value=&quot;dark&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_21_42&quot;&gt;Dark&lt;/label&gt;
  
  &lt;input class=&quot;m-switch__input&quot; id=&quot;switch_21_43&quot; type=&quot;radio&quot; name=&quot;switch_21&quot; value=&quot;light&quot; checked=&quot;checked&quot; /&gt;
  &lt;label class=&quot;m-switch__label&quot; for=&quot;switch_21_43&quot;&gt;Light&lt;/label&gt;
&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dashed&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#ff88aa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;line-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;line-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here you see an even thicker border that has a different color, and is also &lt;code class=&quot;highlighter-rouge&quot;&gt;dashed&lt;/code&gt; instead of `solid. The color is a good example for how many different types of values a lot of CSS properties accept. There are a lot more than would fit nicely on this page. Often, you’ll find yourself searching the web for the accepted input values, or looking them up in the CSS spec (check links in &lt;a href=&quot;/2015/01/15/css-resources/&quot;&gt;the Resources section&lt;/a&gt;). This color value is in HEX RGB notation (meaning, hexadecimal red green blue). It can be convenient to use a color picker tool (you can find them online or even use good ol’ MSPaint!) to find the color you want and then copy and paste the value from there.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
        <link>https://cssclass.es/2015/01/06/css-border/</link>
        <guid isPermaLink="true">https://cssclass.es/2015/01/06/css-border/</guid>
        
        
      </item>
    
  </channel>
</rss>
